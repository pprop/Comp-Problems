
Given a large number as string, find remainder of number when divided by 7.

Examples :

Input : num = 1234
Output : 2

Input : num = 1232
Output : 0

Input : num = 12345
Output : 4


TRICK:::

    let us take above Example where number is 12345. 

We reverse the number from end and series from 
the beginning and keep adding multiplication to
the result.
(12345 % 7) = (5*1 + 4*3 + 3*2 + 2*(-1) + 1*(-3)) % 7
            = (5 + 12 + 6 - 2 - 3)%7
            = (18) % 7
            = 4
hence 4 will be the remainder when we divide
the number 12345 by 7


// C++ program to find remainder of a large 
// number when divided by 7. 
#include<iostream> 
using namespace std; 

/* Function which return Remainder after dividing 
the number by 7 */
int remainderWith7(string num) 
{ 
	// This series is used to find remainder with 7 
	int series[] = {1, 3, 2, -1, -3, -2}; 

	// Index of next element in series 
	int series_index = 0; 

	int result = 0; // Initialize result 

	// Traverse num from end 
	for (int i=num.size()-1; i>=0; i--) 
	{ 
		/* Find current digit of nun */
		int digit = num[i] - '0'; 

		// Add next term to result 
		result += digit * series[series_index]; 

		// Move to next term in series 
		series_index = (series_index + 1) % 6; 

		// Make sure that result never goes beyond 7. 
		result %= 7; 
	} 

	// Make sure that remainder is positive 
	if (result < 0) 
	result = (result + 7) % 7; 

	return result; 
} 

/* Driver program */
int main() 
{ 
	string str = "12345"; 
	cout << "Remainder with 7 is "
		<< remainderWith7(str); 
	return 0; 
} 
